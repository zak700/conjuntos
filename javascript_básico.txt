JavaScript (JS) é uma linguagem de programação usada principalmente para adicionar interatividade a páginas web, mas também pode ser empregada em diversas outras aplicações, como, por exemplo, em servidores, sendo utilizada em inúmeros sites e jogos ao longo dos anos.

Porém, antes de começar a aprender JavaScript, é necessário entender o que é o console.

O console refere-se a uma interface de linha de comando na qual o desenvolvedor pode interagir com o código, executar comandos e visualizar mensagens de depuração. Ao escrever códigos, é necessário testá-los de forma prática, utilizando o console justamente para isso: verificar se o código está funcionando corretamente.

No JavaScript, existem várias funções, e entre elas está o console.log().
O principal objetivo dessa função é exibir informações durante o desenvolvimento, ajudando os desenvolvedores a inspecionar variáveis, rastrear caminhos de execução e identificar problemas no código.
Para utilizá-la, basta colocar a informação dentro dos parênteses. Por exemplo:

console.log("amarelo") // saída: amarelo
O terminal (saída) retornará a palavra "amarelo", indicando que o código funcionou corretamente.

Variáveis
No JavaScript, as variáveis são espaços de memória reservados pelo programa para armazenar informações que serão usadas durante a execução.
Existem, no total, três formas principais de declarar variáveis:

var

let

const

É fundamental entender a diferença entre elas para utilizá-las corretamente.

var
O JavaScript possui uma característica chamada hoisting. Isso significa que, quando declaramos uma variável com var, ela é "elevada" para o topo do seu escopo (ou seja, o contexto em que as variáveis e funções podem ser acessadas dentro do código). Por exemplo:

console.log(cor); // indefinido, pois só a declaração sobe, não o valor
var cor = "roxo";
console.log(cor); // roxo

Com var, é possível redeclarar e reatribuir valores sem restrições, mas, por questões de boas práticas e previsibilidade, atualmente recomenda-se usar let ou const na maioria dos casos.

let foi introduzido no ES6 (2015).

Tem escopo de bloco, ou seja, só existe dentro do bloco {} onde foi declarada.

Não faz hoisting da mesma forma: a declaração é “vista”, mas o valor não pode ser acessado antes. Isso gera um erro de ReferenceError.

É preferível a var na maioria dos casos.

let cor = "azul";
console.log(cor); // azul

if (true) {
  let cor = "verde";
  console.log(cor); // verde
}

console.log(cor); // azul (a de fora do bloco)

const
Também tem escopo de bloco, igual ao let.

A diferença é que o valor não pode ser reatribuído.

Mas não é imutável: objetos ou arrays podem ter seus conteúdos modificados.

Exemplo:

const cor = "amarelo";
console.log(cor); // amarelo

// cor = "vermelho"; // Erro! Não pode reatribuir

const cores = ["vermelho", "azul"];
cores.push("verde"); // Funciona!
console.log(cores); // ["vermelho", "azul", "verde"]
